



-- Sequences for Operations schema
CREATE SEQUENCE CONTENT_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ACTORS_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ACTORS_CONTENT_LINKING_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ACCOUNT_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PROFILES_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PROFILES_CONTENT_LINKING_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PAYMENT_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PLANS_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SUBSCRIPTION_seq START WITH 1 INCREMENT BY 1;


-- Sequences for Support Schema
CREATE SEQUENCE CONTACTS_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE JOB_DEPARTMENT_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE EMPLOYEE_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TICKET_seq START WITH 1 INCREMENT BY 1;




-- Operations table ddl begins below



-- Stores details about content like movies and tv shows
CREATE TABLE CONTENT (
    CONTENTID NUMBER(10) DEFAULT CONTENT_seq.nextval PRIMARY KEY,
    CONTENTTYPE VARCHAR2(255),
    DESCRIPTIONOFCONTENT VARCHAR2(255),
    CONTENTLANGUAGE VARCHAR2(255),
    TITLE VARCHAR2(255),
    RATING NUMBER(3) CHECK (
    RATING > 0
    AND RATING <= 5
  ),
    DURATIONTIME NUMBER(10),
    CREATEDDATE DATE,
    UPDATEDDATE DATE,
    NOOFVIEWS NUMBER(10),
    GENRE VARCHAR2(255)
);





-- Stores details about actors
CREATE TABLE ACTORS(
   ACTORID NUMBER(10) DEFAULT ACTORS_seq.NEXTVAL PRIMARY KEY,
   NAMEOFACTOR VARCHAR2(255),
   GENDER VARCHAR2(1),
   DESCRIPTIONOFACTOR VARCHAR2(255),
   
   CHECK(GENDER in ('M', 'F', 'O'))
   
);



-- Linking table to handle many to many relationship between ACTOR and CONTENT
CREATE TABLE ACTORS_CONTENT_LINKING(
   ACTORS_CONTENT_LINKING_ID NUMBER(10) DEFAULT ACTORS_CONTENT_LINKING_seq.nextval PRIMARY KEY,
   ACTORID NUMBER(10) NOT NULL  ,
   CONTENTID NUMBER(10) NOT NULL ,
   CONSTRAINT FK_ACTORS_CONTENT_LINKING_TO_ACTORS 
      FOREIGN KEY (ACTORID) 
      REFERENCES ACTORS(ACTORID),
   CONSTRAINT FK_ACTORS_CONTENT_LINKING_TO_CONTENT 
      FOREIGN KEY (CONTENTID) 
      REFERENCES CONTENT(CONTENTID)
);


-- indexing foreign key actor id in ACTORS_CONTENT_LINKING table and profileid in ACTORS_CONTENT_LINKING table
CREATE INDEX ACTORS_CONTENT_LINKING_ACTORS_ID_IDX
ON ACTORS_CONTENT_LINKING (ACTORID);


CREATE INDEX ACTORS_CONTENT_LINKING_CONTENT_ID_IDX
ON ACTORS_CONTENT_LINKING (CONTENTID);




-- Stores details about customer account. Login details come hashed from the backend
CREATE TABLE ACCOUNT(
   ACCOUNTID NUMBER(10) DEFAULT ACCOUNT_seq.nextval PRIMARY KEY,
   NAMEONACCOUNT VARCHAR2(255),
   USEREMAIL VARCHAR2(255),
   USERPASSWORD VARCHAR2(255),
   REGION VARCHAR2(255),
   CREATEDDATE DATE,
   UPDATEDDATE DATE
);









-- Stores profiles within an account
CREATE TABLE PROFILES(
   PROFILEID NUMBER(10) DEFAULT PROFILES_seq.nextval PRIMARY KEY,
   ACCOUNTID NUMBER(10),
   NAMEOFPROFILE VARCHAR2(255),
   CREATEDDATE DATE,
   UPDATEDDATE DATE,
   CONSTRAINT FK_PROFILES_TO_ACCOUNT
      FOREIGN KEY (ACCOUNTID) 
      REFERENCES ACCOUNT(ACCOUNTID)
);



-- indexing foreign key account id in profiles table
CREATE INDEX PROFILES_ACCOUNT_ID_IDX
ON PROFILES (ACCOUNTID);




-- Handles many to many relation between PROFILES AND CONTENT
CREATE TABLE PROFILES_CONTENT_LINKING(
   PROFILES_CONTENT_LINKING_ID NUMBER(10) DEFAULT PROFILES_CONTENT_LINKING_seq.nextval PRIMARY KEY,
   PROFILEID NUMBER(10) NOT NULL  ,
   CONTENTID NUMBER(10) NOT NULL ,
   CONSTRAINT FK_PROFILES_CONTENT_LINKING_TO_PROFILES 
      FOREIGN KEY (PROFILEID) 
      REFERENCES PROFILES(PROFILEID),
   CONSTRAINT FK_PROFILES_CONTENT_LINKING_TO_CONTENT 
      FOREIGN KEY (CONTENTID) 
      REFERENCES CONTENT(CONTENTID)
);


-- indexing foriegn key profile ID and content id in linking table
CREATE INDEX PCL_PROFILES_ID_IDX
ON PROFILES_CONTENT_LINKING (PROFILEID);

CREATE INDEX PCL_CONTENT_ID_IDX
ON PROFILES_CONTENT_LINKING (CONTENTID);




-- Stores Payment details linked with account
CREATE TABLE PAYMENT(
   PAYMENTID NUMBER(10) DEFAULT PAYMENT_seq.nextval PRIMARY KEY,
   ACCOUNTID NUMBER(10) NOT NULL,
   CC_NUMBER VARCHAR2(255),
   EXPIRATIONDATE DATE,
   CVV VARCHAR2(255),
   ZIP VARCHAR2(50),
   CONSTRAINT FK_PAYMENT_TO_ACCOUNT
      FOREIGN KEY (ACCOUNTID) 
      REFERENCES ACCOUNT(ACCOUNTID)
);



-- Indexing foreign key account id in payment table
CREATE INDEX PAYMENT_ACCOUNT_ID_IDX
ON PAYMENT (ACCOUNTID);




-- Stores details on plans offered
CREATE TABLE PLANS(
   PLANID NUMBER(10) DEFAULT PLANS_seq.nextval PRIMARY KEY,
   PLANNAME VARCHAR2(255),
   CHARGES VARCHAR2(255)
);






-- Keeps track of subscriptions of each account
CREATE TABLE SUBSCRIPTION(
   SUSBCRIPTIONID NUMBER(10) DEFAULT SUBSCRIPTION_seq.nextval PRIMARY KEY,
   ACCOUNTID NUMBER(10),
   PLANID NUMBER(10),
   PAYMENTDUE NUMBER(15,2),
   VALIDTILL DATE,
   CREATEDDATE DATE,
   UPDATEDDATE DATE,
   CONSTRAINT FK_SUBSCRIPTION_TO_ACCOUNT
      FOREIGN KEY (ACCOUNTID) 
      REFERENCES ACCOUNT(ACCOUNTID),
   CONSTRAINT FK_SUBSCRIPTION_TO_PLANS
      FOREIGN KEY (PLANID) 
      REFERENCES PLANS(PLANID)
);




-- Indexing foreign keys account id and plan id in SUBSCRIPTION table
CREATE INDEX SUBSCRIPTION_ACCOUNT_ID_IDX
ON SUBSCRIPTION (ACCOUNTID);

CREATE INDEX SUBSCRIPTION_PLAN_ID_IDX
ON SUBSCRIPTION (PLANID);





-- SUPPORT schema ddl begins here



-- keeps track of each contact made to support team
CREATE TABLE CONTACTS(
   USERID NUMBER(10) DEFAULT CONTACTS_seq.nextval PRIMARY KEY,
   NAMEOFUSER VARCHAR2(255),
   PHONE VARCHAR2(15),
   EMAIL VARCHAR2(255),
   MODEOFCONTACT VARCHAR2(255),
   REGION VARCHAR2(255),
   CREATED DATE
);





-- keeps track of departments each ticket worker works in
CREATE TABLE JOB_DEPARTMENT(
   JOBID NUMBER(10) DEFAULT JOB_DEPARTMENT_seq.nextval PRIMARY KEY,
   JOBDEPT VARCHAR2(255),
   DEPTDESC VARCHAR2(255),
   DESCRIPTION VARCHAR2(255),
   SALARYRANGE VARCHAR2(255)
);



-- keeps track of each employee working on tickets
CREATE TABLE EMPLOYEE(
   EMPLOYEEID NUMBER(10) DEFAULT EMPLOYEE_seq.nextval PRIMARY KEY,
   FIRSTNAME VARCHAR2(255),
   MIDDLENAME VARCHAR2(255),
   LASTNAME VARCHAR2(255),
   GENDER VARCHAR2(1),
   AGE NUMBER(3),
   ADDRESS VARCHAR2(255),
   JOBID NUMBER(10),
   EMPLOYEELEVEL NUMBER(3) CHECK (
    EMPLOYEELEVEL > 0
    AND EMPLOYEELEVEL <= 5
  ),
   EMAIL VARCHAR2(255),
   PHONE VARCHAR2(15),
   CHECK(GENDER in ('M', 'F', 'O')),
    CONSTRAINT FK_EMPLOYEE_TO_JOBDEPARTMENT
      FOREIGN KEY (JOBID) 
      REFERENCES JOB_DEPARTMENT(JOBID)
);

CREATE INDEX EMPLOYEE_HD_JOB_ID_IDX
ON EMPLOYEE (JOBID);


-- keeps track of all tickets created for example their work status
CREATE TABLE TICKET(
   TICKETID NUMBER(10) DEFAULT TICKET_seq.nextval PRIMARY KEY,
   USERID NUMBER(10),
   STATUS VARCHAR2(255),
   DESCRIPTION VARCHAR2(255),
   PRIORITY VARCHAR2(255),
   TIMESTART DATE,
   TIMEEND DATE,
   CHATHISTORY VARCHAR2(255),
   REGION VARCHAR2(255),
   EMPLOYEEID NUMBER(10),
   CONSTRAINT FK_TICKET_TO_EMPLOYEE
      FOREIGN KEY (EMPLOYEEID) 
      REFERENCES EMPLOYEE(EMPLOYEEID),
    CONSTRAINT FK_TICKET_TO_CONTACTS
      FOREIGN KEY (USERID) 
      REFERENCES CONTACTS(USERID)
);



-- indexing foreign keys employee id and user id in TICKET table
CREATE INDEX SUPPORT_EMPLOYEE_JOB_ID_IDX
ON TICKET (EMPLOYEEID);

CREATE INDEX SUPPORT_USER_ID_IDX
ON TICKET (USERID);





----------INSERT STATEMENTS-----------------

INSERT INTO CONTENT VALUES (
    CONTENT_seq.nextval ,'TVSHOW','Story of Jess moving in with new toommates','English','New Girl',5,23,SYSDATE-10,SYSDATE,100020732,'COMEDY'
);

INSERT INTO CONTENT VALUES (
    CONTENT_seq.nextval ,'MOVIE','A heart warming christmas movie','English','Die Hard',4,163,SYSDATE-20,SYSDATE,20020732,'ACTION'
);

INSERT INTO CONTENT VALUES (
    CONTENT_seq.nextval ,'DOCUSERIES','That woman Carroll Baskin','English','Tiger King',5,230,SYSDATE-5,SYSDATE,42304723,'NONFICTION'
);

INSERT INTO CONTENT VALUES (
    CONTENT_seq.nextval ,'MOVIE','Man wins discrimination lawsuit agaisnt entire country','Hindi','Chak De India',5,182,SYSDATE-13,SYSDATE,32107391,'DRAMA'
);

INSERT INTO CONTENT VALUES (
    CONTENT_seq.nextval ,'TVSHOW','Man moves to Missouri from Chicago with family and adjusts to his new job','English','Ozark',5,48,SYSDATE-2,SYSDATE,278312736,'DRAMA'
);

INSERT INTO ACTORS VALUES(ACTORS_seq.nextval, 'Eggs Benedict Crumplesnatch' ,'M','That dude from dr strange i think his name is Benficial Cucumber');
INSERT INTO ACTORS VALUES(ACTORS_seq.nextval, 'Danny Devito' ,'M','Rated most handsome Actor for 80th straight year');
INSERT INTO ACTORS VALUES(ACTORS_seq.nextval, 'Kirsten Dunst' ,'F','Worst vampire ever');
INSERT INTO ACTORS VALUES(ACTORS_seq.nextval, 'Megan Fox' ,'F','better mechanic than anyone who works at Costco Tire');
INSERT INTO ACTORS VALUES(ACTORS_seq.nextval, 'Tom Holland' ,'M','the best spiderman');


INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,1,2);
INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,2,2);
INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,3,5);
INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,4,1);
INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,3,3);
INSERT INTO ACTORS_CONTENT_LINKING VALUES(ACTORS_CONTENT_LINKING_seq.nextval,5,2);





INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Aman Bhardwaj','aman@utexas.edu','3y21893ywbdwjbd','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Kinnary Panchal','kennedy@utexas.edu','23hrjh1bfiou3egfu','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Mahathi Reddy','mahathi@utexas.edu','3487y21oergbhwkbcdlkwed','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Deeksha Pandit','deeksha@utexas.edu','32489urhdfewklc','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Meghna','meghna@utexas.edu','2389ryuehwubvljk','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Yang Wang','yang@utexas.edu','34289ryhwuijcnfdjs','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Judy Chen','judy@utexas.edu','32498ry23fiudwkncls','NORTH_AMERICA',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Benjamin Dover','benjamin@utexas.edu','298374y3euiwdkqw;dn','EU',SYSDATE,SYSDATE);
INSERT INTO ACCOUNT VALUES(ACCOUNT_seq.nextval,'Cranjes McBasketball','cranjes@utexas.edu','09rue98wuodhn','ASIA-SOUTH',SYSDATE,SYSDATE);



INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,1,'Freeloader',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,2,'PaysForEverything',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,1,'Aman',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,3,'Mahathi',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,4,'Deeksha',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,5,'Meghna',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,1,'Kids',SYSDATE,SYSDATE);
INSERT INTO PROFILES VALUES (PROFILES_seq.nextval,6,'Who',SYSDATE,SYSDATE);



INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,1,2);
INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,2,2);
INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,3,2);
INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,4,3);
INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,5,4);
INSERT INTO PROFILES_CONTENT_LINKING  VALUES (PROFILES_CONTENT_LINKING_seq.nextval,5,1);




INSERT INTO PAYMENT VALUES(PAYMENT_seq.nextval,1,'4444888899993333',SYSDATE+300,'677','78706');
INSERT INTO PAYMENT VALUES(PAYMENT_seq.nextval,2,'4812798321321838',SYSDATE+1200,'999','78705');
INSERT INTO PAYMENT VALUES(PAYMENT_seq.nextval,3,'6874379642912737',SYSDATE+1280,'209','78721');
INSERT INTO PAYMENT VALUES(PAYMENT_seq.nextval,4,'5847437243267463',SYSDATE+900,'678','78705');
INSERT INTO PAYMENT VALUES(PAYMENT_seq.nextval,5,'67276137427tt344',SYSDATE+500,'638','78730');



INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-1-NA','7');
INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-2-NA','10');
INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-3-NA','14');
INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-1-EU','6');
INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-2-EU','9');
INSERT INTO PLANS VALUES(PLANS_seq.nextval,'Tier-2-EU','13');

 

 INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,1,1,8,SYSDATE+30,SYSDATE,SYSDATE);
INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,2,2,11,SYSDATE+30,SYSDATE,SYSDATE);
INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,3,3,15,SYSDATE+30,SYSDATE,SYSDATE);
INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,4,4,7,SYSDATE+30,SYSDATE,SYSDATE);
INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,5,5,10,SYSDATE+30,SYSDATE,SYSDATE);
INSERT INTO SUBSCRIPTION VALUES (SUBSCRIPTION_seq.nextval,6,6,14,SYSDATE+30,SYSDATE,SYSDATE);


INSERT INTO CONTACTS VALUES (CONTACTS_seq.nextval,'Karen McKarenson', '911-922-9999', 'karem@karenville.com','PHONE','NA',SYSDATE);
INSERT INTO CONTACTS VALUES (CONTACTS_seq.nextval,'Aman Bhardwaj', '955-922-9787', 'aman@utexas.com','EMAIL','NA',SYSDATE);
INSERT INTO CONTACTS VALUES (CONTACTS_seq.nextval,'Kinnary Panchal', '944-966-3273', 'kennedy@utexas.com','CHAT','NA',SYSDATE);
INSERT INTO CONTACTS VALUES (CONTACTS_seq.nextval,'Meghana', '951-952-6799', 'meghana@utexas.com','PHONE','NA',SYSDATE);
INSERT INTO CONTACTS VALUES (CONTACTS_seq.nextval,'Mahathi Reddy', '997-909-9690', 'mahathi@utexas.com','PHONE','NA',SYSDATE);


INSERT INTO JOB_DEPARTMENT VALUES(JOB_DEPARTMENT_seq.nextval, 'Software','Handles all software related problems','escalation required','100,000-200,000');
INSERT INTO JOB_DEPARTMENT VALUES(JOB_DEPARTMENT_seq.nextval, 'Billing','Handles all billing related problems','escalation not required','90,000-200,000');
INSERT INTO JOB_DEPARTMENT VALUES(JOB_DEPARTMENT_seq.nextval, 'Delivery','Handles all delivery related problems','escalation not required','95,000-200,000');
INSERT INTO JOB_DEPARTMENT VALUES(JOB_DEPARTMENT_seq.nextval, 'Accounting','Handles all accounting related problems','escalation required','100,000-200000');
INSERT INTO JOB_DEPARTMENT VALUES(JOB_DEPARTMENT_seq.nextval, 'Corporate Relations','Handles all E2E related problems','escalation required','100,000-200,000');





INSERT INTO EMPLOYEE VALUES(EMPLOYEE_seq.NEXTVAL,'Blake','','Long','M',99,'96 Airport ln, Autin, TX',1,4,'black@netflix.com','823-328-3270');
INSERT INTO EMPLOYEE VALUES(EMPLOYEE_seq.NEXTVAL,'Dom','','Chambon','F',30,'Ohio Rd, Ohio',2,4,'dom@netflix.com','826-558-3287');
INSERT INTO EMPLOYEE VALUES(EMPLOYEE_seq.NEXTVAL,'Rahul','M','Rangarao','M',20,'402 hill ln, Austin',3,5,'rahul@netflix.com','823-328-3676');
INSERT INTO EMPLOYEE VALUES(EMPLOYEE_seq.NEXTVAL,'Steven','H','Hobson','M',25,'Ohio ln, Ohio',4,4,'steve@netflix.com','823-328-3373');
INSERT INTO EMPLOYEE VALUES(EMPLOYEE_seq.NEXTVAL,'Sam','J','Davilla','M',40,'49372 Rio Grande, Autin, TX',5,4,'sam@netflix.com','823-373-3387');





INSERT INTO TICKET VALUES (TICKET_seq.NEXTVAL,1,'RESOLVED','Says netflix wont start','Critical',
SYSDATE-30,SYSDATE,'Hello, yeah netflix machine broke','NA',1);
INSERT INTO TICKET VALUES (TICKET_seq.NEXTVAL,2,'IN-PROGRESS','Billing issue','High',
SYSDATE-40,SYSDATE-2,'Hello, billing machine broke','NA',2);


INSERT INTO TICKET VALUES (TICKET_seq.NEXTVAL,3,'RESOLVED','Needs to update shipping address','Low',
SYSDATE-30,SYSDATE,'Hi i added wrong address','NA',3);


INSERT INTO TICKET VALUES (TICKET_seq.NEXTVAL,4,'PENDING','Needs to update tax code','Critical',
SYSDATE-30,SYSDATE,'I have updated tax infortation for the accouting team','NA',4);
INSERT INTO TICKET VALUES (TICKET_seq.NEXTVAL,1,'RESOLVED','Needs to speak to the netflix manager','Critical',
SYSDATE-30,SYSDATE,'Hello, i need to speak to someone who can help with clients','NA',5);




-- commenting the commit statement


--commit;





